version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: ./compose/dev/backend/Dockerfile
    command: /start.sh
    volumes:
      - ./backend:/app
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      - db

  frontend:
    build:
      context: .
      dockerfile: ./compose/dev/frontend/Dockerfile
    volumes:
      - ./frontend:/frontend
      - node_modules:/frontend/node_modules
    environment:
      - WDS_SOCKET_HOST=127.0.0.1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    command: npm run dev -- --host 0.0.0.0
    ports:
      - 80:5173
    env_file:
      - .env

  db:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - pg_data:/var/lib/postgresql/data

  adminer:
    image: adminer:latest
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db
    ports:
      - 8080:8080

  redis:
    image: redis:latest

  commander:
    image: rediscommander/redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - 8081:8081
    depends_on:
      - redis

volumes:
  node_modules:
  pg_data: